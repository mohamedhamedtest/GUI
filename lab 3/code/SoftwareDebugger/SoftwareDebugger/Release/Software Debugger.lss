
Software Debugger.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000372  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  00000372  00000406  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000014  00800064  00800064  0000040a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000040a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000043c  2**2
                  CONTENTS, READONLY
  5 .debug_info   0000052e  00000000  00000000  00000478  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004e7  00000000  00000000  000009a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000116  00000000  00000000  00000e8d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000001af  00000000  00000000  00000fa3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 12 01 	jmp	0x224	; 0x224 <__vector_13>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e7       	ldi	r30, 0x72	; 114
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 36       	cpi	r26, 0x64	; 100
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a4 e6       	ldi	r26, 0x64	; 100
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a8 37       	cpi	r26, 0x78	; 120
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 b7 01 	jmp	0x36e	; 0x36e <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
  92:	0e 94 58 00 	call	0xb0	; 0xb0 <SDEBUG_Init>
  96:	78 94       	sei
  98:	0e 94 7a 00 	call	0xf4	; 0xf4 <SDEBUG_MainFunction>
  9c:	2f e3       	ldi	r18, 0x3F	; 63
  9e:	8d e0       	ldi	r24, 0x0D	; 13
  a0:	93 e0       	ldi	r25, 0x03	; 3
  a2:	21 50       	subi	r18, 0x01	; 1
  a4:	80 40       	sbci	r24, 0x00	; 0
  a6:	90 40       	sbci	r25, 0x00	; 0
  a8:	e1 f7       	brne	.-8      	; 0xa2 <main+0x10>
  aa:	00 c0       	rjmp	.+0      	; 0xac <main+0x1a>
  ac:	00 00       	nop
  ae:	f4 cf       	rjmp	.-24     	; 0x98 <main+0x6>

000000b0 <SDEBUG_Init>:
  b0:	cf 93       	push	r28
  b2:	df 93       	push	r29
  b4:	00 d0       	rcall	.+0      	; 0xb6 <SDEBUG_Init+0x6>
  b6:	00 d0       	rcall	.+0      	; 0xb8 <SDEBUG_Init+0x8>
  b8:	1f 92       	push	r1
  ba:	cd b7       	in	r28, 0x3d	; 61
  bc:	de b7       	in	r29, 0x3e	; 62
  be:	83 e3       	ldi	r24, 0x33	; 51
  c0:	8a 83       	std	Y+2, r24	; 0x02
  c2:	19 82       	std	Y+1, r1	; 0x01
  c4:	1b 82       	std	Y+3, r1	; 0x03
  c6:	88 ed       	ldi	r24, 0xD8	; 216
  c8:	8c 83       	std	Y+4, r24	; 0x04
  ca:	86 e8       	ldi	r24, 0x86	; 134
  cc:	8d 83       	std	Y+5, r24	; 0x05
  ce:	ce 01       	movw	r24, r28
  d0:	01 96       	adiw	r24, 0x01	; 1
  d2:	0e 94 4a 01 	call	0x294	; 0x294 <UART_Init>
  d6:	e4 e6       	ldi	r30, 0x64	; 100
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	11 92       	st	Z+, r1
  dc:	80 e0       	ldi	r24, 0x00	; 0
  de:	ec 36       	cpi	r30, 0x6C	; 108
  e0:	f8 07       	cpc	r31, r24
  e2:	d9 f7       	brne	.-10     	; 0xda <SDEBUG_Init+0x2a>
  e4:	0f 90       	pop	r0
  e6:	0f 90       	pop	r0
  e8:	0f 90       	pop	r0
  ea:	0f 90       	pop	r0
  ec:	0f 90       	pop	r0
  ee:	df 91       	pop	r29
  f0:	cf 91       	pop	r28
  f2:	08 95       	ret

000000f4 <SDEBUG_MainFunction>:
  f4:	0f 93       	push	r16
  f6:	1f 93       	push	r17
  f8:	cf 93       	push	r28
  fa:	df 93       	push	r29
  fc:	00 d0       	rcall	.+0      	; 0xfe <SDEBUG_MainFunction+0xa>
  fe:	00 d0       	rcall	.+0      	; 0x100 <SDEBUG_MainFunction+0xc>
 100:	cd b7       	in	r28, 0x3d	; 61
 102:	de b7       	in	r29, 0x3e	; 62
 104:	61 e0       	ldi	r22, 0x01	; 1
 106:	70 e0       	ldi	r23, 0x00	; 0
 108:	80 e6       	ldi	r24, 0x60	; 96
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	0e 94 56 01 	call	0x2ac	; 0x2ac <UART_SendPayload>
 110:	0e 94 75 01 	call	0x2ea	; 0x2ea <UART_IsTxComplete>
 114:	88 23       	and	r24, r24
 116:	e1 f3       	breq	.-8      	; 0x110 <SDEBUG_MainFunction+0x1c>
 118:	68 e0       	ldi	r22, 0x08	; 8
 11a:	70 e0       	ldi	r23, 0x00	; 0
 11c:	84 e6       	ldi	r24, 0x64	; 100
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	0e 94 68 01 	call	0x2d0	; 0x2d0 <UART_ReceivePayload>
 124:	0e 94 83 01 	call	0x306	; 0x306 <UART_IsRxComplete>
 128:	88 23       	and	r24, r24
 12a:	e1 f3       	breq	.-8      	; 0x124 <SDEBUG_MainFunction+0x30>
 12c:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__data_end+0x2>
 130:	89 83       	std	Y+1, r24	; 0x01
 132:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <__data_end+0x3>
 136:	8a 83       	std	Y+2, r24	; 0x02
 138:	ce 01       	movw	r24, r28
 13a:	01 96       	adiw	r24, 0x01	; 1
 13c:	0e 94 91 01 	call	0x322	; 0x322 <atoi>
 140:	8c 01       	movw	r16, r24
 142:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__data_end+0x4>
 146:	89 83       	std	Y+1, r24	; 0x01
 148:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__data_end+0x5>
 14c:	8a 83       	std	Y+2, r24	; 0x02
 14e:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end+0x6>
 152:	8b 83       	std	Y+3, r24	; 0x03
 154:	ce 01       	movw	r24, r28
 156:	01 96       	adiw	r24, 0x01	; 1
 158:	0e 94 91 01 	call	0x322	; 0x322 <atoi>
 15c:	8c 83       	std	Y+4, r24	; 0x04
 15e:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__data_end+0x1>
 162:	97 35       	cpi	r25, 0x57	; 87
 164:	41 f0       	breq	.+16     	; 0x176 <SDEBUG_MainFunction+0x82>
 166:	18 f4       	brcc	.+6      	; 0x16e <SDEBUG_MainFunction+0x7a>
 168:	92 35       	cpi	r25, 0x52	; 82
 16a:	41 f0       	breq	.+16     	; 0x17c <SDEBUG_MainFunction+0x88>
 16c:	10 c0       	rjmp	.+32     	; 0x18e <SDEBUG_MainFunction+0x9a>
 16e:	92 37       	cpi	r25, 0x72	; 114
 170:	29 f0       	breq	.+10     	; 0x17c <SDEBUG_MainFunction+0x88>
 172:	97 37       	cpi	r25, 0x77	; 119
 174:	61 f4       	brne	.+24     	; 0x18e <SDEBUG_MainFunction+0x9a>
 176:	f8 01       	movw	r30, r16
 178:	80 83       	st	Z, r24
 17a:	09 c0       	rjmp	.+18     	; 0x18e <SDEBUG_MainFunction+0x9a>
 17c:	f8 01       	movw	r30, r16
 17e:	80 81       	ld	r24, Z
 180:	8c 83       	std	Y+4, r24	; 0x04
 182:	61 e0       	ldi	r22, 0x01	; 1
 184:	70 e0       	ldi	r23, 0x00	; 0
 186:	ce 01       	movw	r24, r28
 188:	04 96       	adiw	r24, 0x04	; 4
 18a:	0e 94 56 01 	call	0x2ac	; 0x2ac <UART_SendPayload>
 18e:	61 e0       	ldi	r22, 0x01	; 1
 190:	70 e0       	ldi	r23, 0x00	; 0
 192:	82 e6       	ldi	r24, 0x62	; 98
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	0e 94 56 01 	call	0x2ac	; 0x2ac <UART_SendPayload>
 19a:	0f 90       	pop	r0
 19c:	0f 90       	pop	r0
 19e:	0f 90       	pop	r0
 1a0:	0f 90       	pop	r0
 1a2:	df 91       	pop	r29
 1a4:	cf 91       	pop	r28
 1a6:	1f 91       	pop	r17
 1a8:	0f 91       	pop	r16
 1aa:	08 95       	ret

000001ac <__vector_11>:
 1ac:	1f 92       	push	r1
 1ae:	0f 92       	push	r0
 1b0:	0f b6       	in	r0, 0x3f	; 63
 1b2:	0f 92       	push	r0
 1b4:	11 24       	eor	r1, r1
 1b6:	2f 93       	push	r18
 1b8:	4f 93       	push	r20
 1ba:	5f 93       	push	r21
 1bc:	8f 93       	push	r24
 1be:	9f 93       	push	r25
 1c0:	ef 93       	push	r30
 1c2:	ff 93       	push	r31
 1c4:	f8 94       	cli
 1c6:	2c b1       	in	r18, 0x0c	; 12
 1c8:	40 91 6c 00 	lds	r20, 0x006C	; 0x80006c <rx_cnt>
 1cc:	50 91 6d 00 	lds	r21, 0x006D	; 0x80006d <rx_cnt+0x1>
 1d0:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <rx_len>
 1d4:	90 91 6f 00 	lds	r25, 0x006F	; 0x80006f <rx_len+0x1>
 1d8:	48 17       	cp	r20, r24
 1da:	59 07       	cpc	r21, r25
 1dc:	b0 f4       	brcc	.+44     	; 0x20a <__EEPROM_REGION_LENGTH__+0xa>
 1de:	20 32       	cpi	r18, 0x20	; 32
 1e0:	a1 f0       	breq	.+40     	; 0x20a <__EEPROM_REGION_LENGTH__+0xa>
 1e2:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <rx_cnt>
 1e6:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <rx_cnt+0x1>
 1ea:	e0 91 70 00 	lds	r30, 0x0070	; 0x800070 <rx_buffer>
 1ee:	f0 91 71 00 	lds	r31, 0x0071	; 0x800071 <rx_buffer+0x1>
 1f2:	e8 0f       	add	r30, r24
 1f4:	f9 1f       	adc	r31, r25
 1f6:	20 83       	st	Z, r18
 1f8:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <rx_cnt>
 1fc:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <rx_cnt+0x1>
 200:	01 96       	adiw	r24, 0x01	; 1
 202:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <rx_cnt+0x1>
 206:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <rx_cnt>
 20a:	78 94       	sei
 20c:	ff 91       	pop	r31
 20e:	ef 91       	pop	r30
 210:	9f 91       	pop	r25
 212:	8f 91       	pop	r24
 214:	5f 91       	pop	r21
 216:	4f 91       	pop	r20
 218:	2f 91       	pop	r18
 21a:	0f 90       	pop	r0
 21c:	0f be       	out	0x3f, r0	; 63
 21e:	0f 90       	pop	r0
 220:	1f 90       	pop	r1
 222:	18 95       	reti

00000224 <__vector_13>:
 224:	1f 92       	push	r1
 226:	0f 92       	push	r0
 228:	0f b6       	in	r0, 0x3f	; 63
 22a:	0f 92       	push	r0
 22c:	11 24       	eor	r1, r1
 22e:	2f 93       	push	r18
 230:	3f 93       	push	r19
 232:	8f 93       	push	r24
 234:	9f 93       	push	r25
 236:	ef 93       	push	r30
 238:	ff 93       	push	r31
 23a:	f8 94       	cli
 23c:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <tx_cnt>
 240:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <tx_cnt+0x1>
 244:	01 96       	adiw	r24, 0x01	; 1
 246:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <tx_cnt+0x1>
 24a:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <tx_cnt>
 24e:	20 91 72 00 	lds	r18, 0x0072	; 0x800072 <tx_cnt>
 252:	30 91 73 00 	lds	r19, 0x0073	; 0x800073 <tx_cnt+0x1>
 256:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <tx_len>
 25a:	90 91 75 00 	lds	r25, 0x0075	; 0x800075 <tx_len+0x1>
 25e:	28 17       	cp	r18, r24
 260:	39 07       	cpc	r19, r25
 262:	60 f4       	brcc	.+24     	; 0x27c <__vector_13+0x58>
 264:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <tx_cnt>
 268:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <tx_cnt+0x1>
 26c:	e0 91 76 00 	lds	r30, 0x0076	; 0x800076 <tx_buffer>
 270:	f0 91 77 00 	lds	r31, 0x0077	; 0x800077 <tx_buffer+0x1>
 274:	e8 0f       	add	r30, r24
 276:	f9 1f       	adc	r31, r25
 278:	80 81       	ld	r24, Z
 27a:	8c b9       	out	0x0c, r24	; 12
 27c:	78 94       	sei
 27e:	ff 91       	pop	r31
 280:	ef 91       	pop	r30
 282:	9f 91       	pop	r25
 284:	8f 91       	pop	r24
 286:	3f 91       	pop	r19
 288:	2f 91       	pop	r18
 28a:	0f 90       	pop	r0
 28c:	0f be       	out	0x3f, r0	; 63
 28e:	0f 90       	pop	r0
 290:	1f 90       	pop	r1
 292:	18 95       	reti

00000294 <UART_Init>:
 294:	fc 01       	movw	r30, r24
 296:	80 81       	ld	r24, Z
 298:	80 bd       	out	0x20, r24	; 32
 29a:	81 81       	ldd	r24, Z+1	; 0x01
 29c:	89 b9       	out	0x09, r24	; 9
 29e:	82 81       	ldd	r24, Z+2	; 0x02
 2a0:	8b b9       	out	0x0b, r24	; 11
 2a2:	83 81       	ldd	r24, Z+3	; 0x03
 2a4:	8a b9       	out	0x0a, r24	; 10
 2a6:	84 81       	ldd	r24, Z+4	; 0x04
 2a8:	80 bd       	out	0x20, r24	; 32
 2aa:	08 95       	ret

000002ac <UART_SendPayload>:
 2ac:	90 93 77 00 	sts	0x0077, r25	; 0x800077 <tx_buffer+0x1>
 2b0:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <tx_buffer>
 2b4:	70 93 75 00 	sts	0x0075, r23	; 0x800075 <tx_len+0x1>
 2b8:	60 93 74 00 	sts	0x0074, r22	; 0x800074 <tx_len>
 2bc:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <tx_cnt+0x1>
 2c0:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <tx_cnt>
 2c4:	5d 9b       	sbis	0x0b, 5	; 11
 2c6:	fe cf       	rjmp	.-4      	; 0x2c4 <UART_SendPayload+0x18>
 2c8:	fc 01       	movw	r30, r24
 2ca:	80 81       	ld	r24, Z
 2cc:	8c b9       	out	0x0c, r24	; 12
 2ce:	08 95       	ret

000002d0 <UART_ReceivePayload>:
 2d0:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <rx_buffer+0x1>
 2d4:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <rx_buffer>
 2d8:	70 93 6f 00 	sts	0x006F, r23	; 0x80006f <rx_len+0x1>
 2dc:	60 93 6e 00 	sts	0x006E, r22	; 0x80006e <rx_len>
 2e0:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <rx_cnt+0x1>
 2e4:	10 92 6c 00 	sts	0x006C, r1	; 0x80006c <rx_cnt>
 2e8:	08 95       	ret

000002ea <UART_IsTxComplete>:
 2ea:	40 91 72 00 	lds	r20, 0x0072	; 0x800072 <tx_cnt>
 2ee:	50 91 73 00 	lds	r21, 0x0073	; 0x800073 <tx_cnt+0x1>
 2f2:	20 91 74 00 	lds	r18, 0x0074	; 0x800074 <tx_len>
 2f6:	30 91 75 00 	lds	r19, 0x0075	; 0x800075 <tx_len+0x1>
 2fa:	81 e0       	ldi	r24, 0x01	; 1
 2fc:	42 17       	cp	r20, r18
 2fe:	53 07       	cpc	r21, r19
 300:	08 f4       	brcc	.+2      	; 0x304 <UART_IsTxComplete+0x1a>
 302:	80 e0       	ldi	r24, 0x00	; 0
 304:	08 95       	ret

00000306 <UART_IsRxComplete>:
 306:	40 91 6c 00 	lds	r20, 0x006C	; 0x80006c <rx_cnt>
 30a:	50 91 6d 00 	lds	r21, 0x006D	; 0x80006d <rx_cnt+0x1>
 30e:	20 91 6e 00 	lds	r18, 0x006E	; 0x80006e <rx_len>
 312:	30 91 6f 00 	lds	r19, 0x006F	; 0x80006f <rx_len+0x1>
 316:	81 e0       	ldi	r24, 0x01	; 1
 318:	42 17       	cp	r20, r18
 31a:	53 07       	cpc	r21, r19
 31c:	08 f4       	brcc	.+2      	; 0x320 <UART_IsRxComplete+0x1a>
 31e:	80 e0       	ldi	r24, 0x00	; 0
 320:	08 95       	ret

00000322 <atoi>:
 322:	fc 01       	movw	r30, r24
 324:	88 27       	eor	r24, r24
 326:	99 27       	eor	r25, r25
 328:	e8 94       	clt
 32a:	21 91       	ld	r18, Z+
 32c:	20 32       	cpi	r18, 0x20	; 32
 32e:	e9 f3       	breq	.-6      	; 0x32a <atoi+0x8>
 330:	29 30       	cpi	r18, 0x09	; 9
 332:	10 f0       	brcs	.+4      	; 0x338 <atoi+0x16>
 334:	2e 30       	cpi	r18, 0x0E	; 14
 336:	c8 f3       	brcs	.-14     	; 0x32a <atoi+0x8>
 338:	2b 32       	cpi	r18, 0x2B	; 43
 33a:	41 f0       	breq	.+16     	; 0x34c <atoi+0x2a>
 33c:	2d 32       	cpi	r18, 0x2D	; 45
 33e:	39 f4       	brne	.+14     	; 0x34e <atoi+0x2c>
 340:	68 94       	set
 342:	04 c0       	rjmp	.+8      	; 0x34c <atoi+0x2a>
 344:	0e 94 af 01 	call	0x35e	; 0x35e <__mulhi_const_10>
 348:	82 0f       	add	r24, r18
 34a:	91 1d       	adc	r25, r1
 34c:	21 91       	ld	r18, Z+
 34e:	20 53       	subi	r18, 0x30	; 48
 350:	2a 30       	cpi	r18, 0x0A	; 10
 352:	c0 f3       	brcs	.-16     	; 0x344 <atoi+0x22>
 354:	1e f4       	brtc	.+6      	; 0x35c <atoi+0x3a>
 356:	90 95       	com	r25
 358:	81 95       	neg	r24
 35a:	9f 4f       	sbci	r25, 0xFF	; 255
 35c:	08 95       	ret

0000035e <__mulhi_const_10>:
 35e:	7a e0       	ldi	r23, 0x0A	; 10
 360:	97 9f       	mul	r25, r23
 362:	90 2d       	mov	r25, r0
 364:	87 9f       	mul	r24, r23
 366:	80 2d       	mov	r24, r0
 368:	91 0d       	add	r25, r1
 36a:	11 24       	eor	r1, r1
 36c:	08 95       	ret

0000036e <_exit>:
 36e:	f8 94       	cli

00000370 <__stop_program>:
 370:	ff cf       	rjmp	.-2      	; 0x370 <__stop_program>
